# Variable block
location="eastus"
resourceGroup="Demo-AZ204-M9-EH"
account=eventhub$RANDOM  # to avoid name collisions generate unique name

# create resource group
az group create --location $location --name $resourceGroup

# create an Event Hubs namespace. 
az eventhubs namespace create --name $account --resource-group $resourceGroup -l $location --sku Standard

# create an event hub. Specify a name for the event hub. 
az eventhubs eventhub create --name $account --resource-group $resourceGroup --namespace-name $account

# create a storage account 
az storage account create --name $account --resource-group $resourceGroup

# retrieve key
key=$(az storage account keys list --account-name $account --query [0].value -o tsv)

# create storage container by using key
az storage container create --name capdate --public-access blob  --account-name $account  --account-key $key

# enable event capturing in storage
az eventhubs eventhub update --name $account --namespace-name $account --enable-capture  --destination-name EventHubArchive.AzureBlockBlob --storage-account $account --blob-container capdate --resource-group $resourceGroup

# enable event capturing in storage
az eventhubs eventhub authorization-rule create --name apps --rights Listen Send --eventhub-name $account --namespace-name $account --resource-group $resourceGroup

# retrieve eventhub connection string for next demo code
az eventhubs eventhub authorization-rule keys list --name apps --eventhub-name $account --namespace-name $account --resource-group $resourceGroup --query primaryConnectionString -o tsv

# retrieve storage connection string for next demo code
az storage account show-connection-string --name $account --resource-group $resourceGroup --query connectionString -o tsv


